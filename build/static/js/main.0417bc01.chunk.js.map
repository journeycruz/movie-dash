{"version":3,"sources":["components/NumberWithCommas.js","components/LineChart.js","components/ProgressBar.js","components/InfoPanel.js","components/PurchaseOption.js","App.js","data/Movies.js","reportWebVitals.js","index.js"],"names":["module","exports","x","toString","replace","LineChart","data","labels","datasets","label","datasetOne","fill","backgroundColor","borderColor","borderWidth","pointBackgroundColor","pointBorderWidth","tension","datasetTwo","options","scales","yAxis","min","max","ticks","stepSize","responsive","maintainAspectRatio","plugins","legend","display","width","height","ProgressBar","bgColor","completed","fillerStyles","textAlign","borderRadius","transition","className","style","InfoPanel","props","id","movieOne","movieName","movieTwo","location","numberWithCommas","totalOrders","yearlyOrders","pgBarVal","monthlyRevenue","xmlns","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","update","PurchaseOption","movie","releaseDate","ticket1Date","href","ticket1URL","ticket2Date","ticket2URL","dataset","lastUpdate","movie1","movie2","App","state","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0417bc01.chunk.js","sourcesContent":["/*\nFunctional Component for inserting commas in numbers after every third number\n*/\n\nmodule.exports = function numberWithCommas (x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n","/* eslint-disable react/prop-types */\n\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nconst LineChart = ({ datasetOne, datasetTwo }) => {\n  const data = {\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n    datasets: [\n      {\n        label: ' Movie 1', // change label when hovering over data point\n        data: datasetOne,\n        fill: true, // fill color underneath line: boolean\n        backgroundColor: 'RGBA(159, 157, 155, 0.2)',\n        borderColor: 'RGB(159, 157, 155)',\n        borderWidth: 2.5, // change thickness of line\n        pointBackgroundColor: 'RGB(159, 157, 155)', // fill color of data point\n        pointBorderWidth: 2.5, // change size of data point\n        tension: 0.35 // change tension of line\n      },\n      {\n        label: ' Movie 2',\n        data: datasetTwo,\n        fill: true,\n        backgroundColor: 'RGBA(79, 168, 6, 0.2)',\n        borderColor: 'RGB(79, 168, 6)',\n        borderWidth: 2.5,\n        pointBackgroundColor: 'RGB(79, 168, 6)',\n        pointBorderWidth: 2.5,\n        tension: 0.35\n      }\n    ]\n  };\n\n  const options = {\n    scales: {\n      yAxis: {\n        min: 20,\n        max: 70,\n        ticks: {\n          stepSize: 10\n        }\n      }\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false // legend display settings\n      }\n    }\n  };\n\n  return <Line data={data} options={options} width={495.5} height={189} />;\n};\n\nexport default LineChart;\n","/* eslint-disable react/prop-types */\n\nimport React from 'react';\n\nfunction ProgressBar ({ bgColor, completed }) {\n  const fillerStyles = {\n    height: '100%',\n    width: `${completed}%`,\n    backgroundColor: bgColor,\n    textAlign: 'right',\n    borderRadius: 2,\n    transition: 'width 1s ease-in-out'\n  };\n\n  return (\n    <div className='pb-unfilled'>\n      <div style={fillerStyles}>\n      </div>\n    </div>\n  );\n}\n\nexport default ProgressBar;\n","/* eslint-disable react/prop-types */\n\nimport React from 'react';\nimport '../App.scss';\n\n// Components\nimport LineChart from './LineChart';\nimport ProgressBar from './ProgressBar';\nimport numberWithCommas from './NumberWithCommas';\n\nconst InfoPanel = (props) => {\n  return (\n    <div className='graph-container'>\n      <div className='section-header'>\n        <div>\n          <h1 className='graph-text title'>Total Movie Sales</h1>\n          <p id='sub-title' className='graph-text'>\n            Comparison - {props.movieOne.movieName} and{' '}\n            {props.movieTwo.movieName}\n          </p>\n        </div>\n        <div className='right-align'>\n          <p className='graph-text'>\n            Average value of sales in the past month in:{' '}\n            <strong>{props.location}</strong>\n          </p>\n          <p className='graph-text'>\n            All sales:{' '}\n            {numberWithCommas(\n              props.movieOne.totalOrders + props.movieTwo.totalOrders\n            )}\n          </p>\n        </div>\n      </div>\n      <div className='stats-row'>\n        <div className='graph'>\n          <LineChart\n            datasetOne={props.movieOne.data}\n            datasetTwo={props.movieTwo.data}\n          />\n        </div>\n        <div>\n          <div className='stat-one'>\n            <p className='stat-number'>\n              {numberWithCommas(props.movieOne.yearlyOrders)}\n            </p>\n            <p className='stat-identifier'>Total Orders - Movie 1</p>\n            <ProgressBar\n              bgColor='#7F7D79'\n              completed={props.movieOne.pgBarVal}\n            />\n          </div>\n          <div className='stat-two'>\n            <p className='stat-number'>\n              {numberWithCommas(props.movieTwo.yearlyOrders)}\n            </p>\n            <p className='stat-identifier'>Total Orders - Movie 2</p>\n            <ProgressBar\n              bgColor='#4FA806'\n              completed={props.movieTwo.pgBarVal}\n            />\n          </div>\n        </div>\n      </div>\n      <div className='section-header'>\n        <div id='no-space'>\n          <h3 id='analysis'>Analysis of Sales:</h3>\n          <p id='analysis-text'>\n            The value has been changed over time, and last month reached a level\n            over $\n            {numberWithCommas(\n              props.movieOne.monthlyRevenue + props.movieTwo.monthlyRevenue\n            )}\n          </p>\n        </div>\n        <div id='update-div'>\n          <p id='update-text' className='right-align'>\n            <svg\n              xmlns='http://www.w3.org/2000/svg'\n              className='clock'\n              fill='none'\n              viewBox='0 0 24 24'\n              stroke='currentColor'>\n              <path\n                strokeLinecap='round'\n                strokeLinejoin='round'\n                strokeWidth={3}\n                d='M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z'\n              />\n            </svg>\n            Update on {props.update}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InfoPanel;\n","/* eslint-disable react/prop-types */\n\nimport React from 'react';\n\nfunction PurchaseOption (props) {\n  return (\n    <div className='movie-container'>\n      <div id='release-date'>\n        <h1 className='po-text po-title'>{props.movie.movieName}</h1>\n          <p className='po-text'>\n            Release Date{' '}\n            <svg\n              xmlns='http://www.w3.org/2000/svg'\n              className='clock-2'\n              fill='none'\n              viewBox='0 0 24 24'\n              stroke='currentColor'>\n              <path\n                strokeLinecap='round'\n                strokeLinejoin='round'\n                strokeWidth={3}\n                d='M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z'\n              />\n            </svg>{' '}\n            <span id='puchaseDate'>{props.movie.releaseDate}</span>\n          </p>\n      </div>\n      <div className='flex-row buy-now' id='bottom-grey'>\n        <p className='movie-date'>{props.movie.ticket1Date}</p>\n        <a href={props.movie.ticket1URL} className='btn'>\n          Buy Tickets\n        </a>\n      </div>\n      <div className='flex-row buy-now'>\n        <p className='movie-date'>{props.movie.ticket2Date}</p>\n        <a href={props.movie.ticket2URL} className='btn'>\n          Buy Tickets\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default PurchaseOption;\n","import { Component, React } from 'react';\nimport './App.scss';\n\n// Components\nimport InfoPanel from './components/InfoPanel';\nimport PurchaseOption from './components/PurchaseOption';\n\n// Data\nimport { dataset1 } from './data/Movies';\n\n// Extra Dataset for presentation\n// import { dataset2 } from './data/Movies';\n\nconst dataset = dataset1;\n\nclass App extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      movieOne: dataset.movie1,\n      movieTwo: dataset.movie2,\n      location: dataset.location,\n      update: dataset.lastUpdate\n    };\n  }\n\n  render () {\n    return (\n      <main className='wrapper'>\n        <section className='top-container'>\n          <header className='info-card'>\n            <InfoPanel\n              movieOne={this.state.movieOne}\n              movieTwo={this.state.movieTwo}\n              location={this.state.location}\n              update={this.state.update}\n            />\n          </header>\n        </section>\n        <section className='bottom-container'>\n          <div className='movies'>\n            <PurchaseOption movie={this.state.movieOne} />\n          </div>\n          <div className='movies'>\n            <PurchaseOption movie={this.state.movieTwo} />\n          </div>\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","export const dataset1 = {\n  location: 'United States',\n  lastUpdate: '16.07.2015',\n  movie1: {\n    movieName: 'Movie 1',\n    yearlyOrders: 2346,\n    pgBarVal: 48,\n    totalOrders: 81431,\n    data: [64, 59, 40, 51, 38, 22, 39],\n    monthlyRevenue: 25000,\n    releaseDate: '04 Jan 2015',\n    ticket1Date: 'May 3, 2015',\n    ticket1URL: '/',\n    ticket2Date: 'May 3, 2015',\n    ticket2URL: '/'\n  },\n  movie2: {\n    movieName: 'Movie 2',\n    yearlyOrders: 4422,\n    pgBarVal: 60,\n    totalOrders: 81431,\n    data: [48, 47, 60, 39, 55, 37, 30],\n    monthlyRevenue: 25000,\n    releaseDate: '04 Jan 2015',\n    ticket1Date: 'May 3, 2015',\n    ticket1URL: '/',\n    ticket2Date: 'May 3, 2015',\n    ticket2URL: '/'\n  }\n};\n\nexport const dataset2 = {\n  location: 'Canada',\n  lastUpdate: '03.04.2021',\n  movie1: {\n    movieName: 'Parasite',\n    yearlyOrders: 3258,\n    pgBarVal: 64,\n    totalOrders: 75642,\n    data: [55, 53, 38, 60, 42, 46, 52],\n    monthlyRevenue: 20439,\n    releaseDate: '28 Mar 2016',\n    ticket1Date: 'Mar 28, 2016',\n    ticket1URL: '/',\n    ticket2Date: 'Mar 29, 2016',\n    ticket2URL: '/'\n  },\n  movie2: {\n    movieName: 'John Wick',\n    yearlyOrders: 2651,\n    pgBarVal: 35,\n    totalOrders: 63893,\n    data: [35, 40, 60, 38, 55, 44, 40],\n    monthlyRevenue: 14329,\n    releaseDate: '08 Jun 2001',\n    ticket1Date: 'Jun 08, 2001',\n    ticket1URL: '/',\n    ticket2Date: 'Jun 09, 2001',\n    ticket2URL: '/'\n  }\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}